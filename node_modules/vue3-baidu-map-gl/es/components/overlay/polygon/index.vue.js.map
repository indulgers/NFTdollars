{"version":3,"file":"index.vue.js","sources":["../../../../packages/components/overlay/polygon/index.vue"],"sourcesContent":["<template></template>\n<script setup lang=\"ts\">\n  import { defineProps, inject, watch, withDefaults, defineEmits, nextTick, provide } from 'vue'\n  import useBaseMapEffect from '../../../hooks/useBaseMapEffect'\n  import useLifeCycle from '../../../hooks/useLifeCycle'\n  import { bindEvents, Callback, callWhenDifferentValue, StrokeStyle, type Point } from '../../../utils'\n  export interface PolygonProps {\n    /**\n     * 折线的节点坐标数组\n     */\n    path: Point[] | string[]\n    /**\n     * 是否是行政区域绘制\n     */\n    isBoundary?: boolean\n    /**\n     * @default #000000\n     * 折线颜色\n     */\n    strokeColor?: string\n    /**\n     * 自动根据多边形居中\n     */\n    autoCenter?: boolean\n    /**\n     * 折线的宽度，以像素为单位\n     */\n    strokeWeight?: number\n    /**\n     * 折线的透明度，取值范围0 - 1\n     */\n    strokeOpacity?: number\n    /**\n     * 折线的样式\n     */\n    strokeStyle?: StrokeStyle\n    /**\n     * 面填充颜色，同CSS颜色\n     */\n    fillColor?: string\n\n    /**\n     * 面填充的透明度，范围0-1\n     */\n    fillOpacity?: number\n    /**\n     * @default true\n     * 是否在调用map.clearOverlays清除此覆盖物，默认为true\n     */\n    enableMassClear?: boolean\n    /**\n     * @default false\n     * 是否启用线编辑，默认为false\n     */\n    enableEditing?: boolean\n    /**\n     * @default true\n     * 是否响应点击事件，默认为true\n     */\n    enableClicking?: boolean\n    /**\n     * @default false\n     * 是否开启大地线模式，true时，两点连线将以大地线的形式。默认为false\n     */\n    geodesic?: boolean\n    /**\n     * @default true\n     * 是否进行跨经度180度裁剪，绘制跨精度180时为了优化效果，可以设置成false，默认为true\n     */\n    clip?: boolean\n    onClick?: Callback\n    onDblclick?: Callback\n    onMousedown?: Callback\n    onMouseup?: Callback\n    onMouseout?: Callback\n    onMouseover?: Callback\n    onRemove?: Callback\n    onLineupdate?: Callback\n  }\n  const props = withDefaults(defineProps<PolygonProps>(), {\n    strokeColor: '#000',\n    strokeWeight: 2,\n    strokeOpacity: 1,\n    strokeStyle: 'solid',\n    fillColor: '#fff',\n    fillOpacity: 0.3,\n    massClear: true,\n    editing: false,\n    clicking: true,\n    geodesic: false,\n    clip: true,\n    autoCenter: true\n  })\n  const vueEmits = defineEmits([\n    'initd',\n    'unload',\n    'click',\n    'dblclick',\n    'mousedown',\n    'mouseup',\n    'mouseout',\n    'mouseover',\n    'remove',\n    'lineupdate'\n  ])\n  const { ready } = useLifeCycle()\n  const injectBaseMapSetCenterAndZoom = inject('baseMapSetCenterAndZoom') as (center: {\n    lng: number\n    lat: number\n  }) => void\n  let polygon: BMapGL.Polygon\n  useBaseMapEffect((map: BMapGL.Map) => {\n    const cal = () => {\n      polygon && map.removeOverlay(polygon)\n    }\n    const init = () => {\n      if (!props.path || !props.path.length) return\n      const {\n        path,\n        strokeColor,\n        strokeWeight,\n        strokeOpacity,\n        strokeStyle,\n        fillOpacity,\n        fillColor,\n        enableMassClear,\n        enableEditing,\n        enableClicking,\n        geodesic,\n        clip,\n        isBoundary\n      } = props\n      const pathPoints = isBoundary ? (path as string[]) : pathPointsToMapPoints(path as Point[])\n      if (!pathPoints) return\n      polygon = new BMapGL.Polygon(pathPoints, {\n        strokeColor,\n        strokeWeight,\n        strokeOpacity,\n        strokeStyle,\n        fillOpacity,\n        fillColor,\n        enableMassClear,\n        enableEditing,\n        enableClicking,\n        geodesic,\n        clip\n      })\n      map.addOverlay(polygon)\n      bindEvents(props, vueEmits, polygon)\n      ready(map, polygon)\n      syncMapCenter()\n      watch(() => props.strokeColor, setStrokeColor)\n      watch(() => props.strokeOpacity, setStrokeOpacity)\n      watch(() => props.fillColor, setFillColor)\n      watch(() => props.fillOpacity, setFillOpacity)\n      watch(() => props.strokeWeight, setStrokeWeight)\n      watch(() => props.strokeStyle, setStrokeStyle)\n      watch(() => props.enableMassClear, setMassClear)\n      watch(() => props.enableEditing, setEditing)\n    }\n    init()\n    // 监听值变化, 初始为空时不会初始化, 不为空值时初始化\n    watch(\n      () => props.path,\n      callWhenDifferentValue((path) => {\n        polygon ? setPath(path) : init()\n      }),\n      {\n        deep: true\n      }\n    )\n    return cal\n  })\n\n  provide('getOverlayInstance', () => polygon)\n\n  function syncMapCenter() {\n    nextTick(() => {\n      // 自动设置中心点\n      if (props.autoCenter) {\n        // 获取中心点\n        try {\n          const center = polygon.getBounds()?.getCenter()\n          injectBaseMapSetCenterAndZoom(center)\n        } catch (e) {\n          console.warn('set center error', e)\n        }\n      }\n    })\n  }\n\n  function pathPointsToMapPoints(pathPoints: Point[]) {\n    return pathPoints.map(({ lng, lat }) => new BMapGL.Point(lng, lat))\n  }\n\n  function setPath(path: Point[] | string[]) {\n    if (props.isBoundary) {\n      polygon.setPath(path as string[])\n    } else {\n      polygon.setPath(pathPointsToMapPoints(path as Point[]))\n    }\n    syncMapCenter()\n  }\n\n  function setStrokeColor(color: string): void {\n    polygon.setStrokeColor(color)\n  }\n  function setFillColor(color: string): void {\n    polygon.setFillColor(color)\n  }\n  function setStrokeOpacity(opacity: number): void {\n    polygon.setStrokeOpacity(opacity)\n  }\n  function setFillOpacity(opacity: number): void {\n    polygon.setFillOpacity(opacity)\n  }\n  function setStrokeWeight(weight: number): void {\n    polygon.setStrokeWeight(weight)\n  }\n  function setStrokeStyle(style: StrokeStyle): void {\n    polygon.setStrokeStyle(style)\n  }\n  function setMassClear(enableMassClear?: boolean): void {\n    enableMassClear ? polygon!.enableMassClear() : polygon!.disableMassClear()\n  }\n  function setEditing(enableEditing?: boolean): void {\n    enableEditing ? polygon!.enableEditing() : polygon!.disableEditing()\n  }\n</script>\n<script lang=\"ts\">\n  export default {\n    name: 'BPolygon'\n  }\n</script>\n"],"names":[],"mappings":"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"}