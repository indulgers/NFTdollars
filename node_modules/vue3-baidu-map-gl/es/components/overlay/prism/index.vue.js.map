{"version":3,"file":"index.vue.js","sources":["../../../../packages/components/overlay/prism/index.vue"],"sourcesContent":["<template></template>\n<script setup lang=\"ts\">\n  import { defineProps, inject, watch, withDefaults, defineEmits, nextTick, provide } from 'vue'\n  import useBaseMapEffect from '../../../hooks/useBaseMapEffect'\n  import useLifeCycle from '../../../hooks/useLifeCycle'\n  import { bindEvents, Callback, callWhenDifferentValue, type Point } from '../../../utils'\n  export interface PrismProps {\n    /**\n     * 棱柱的节点坐标数组\n     */\n    path: Point[] | string[]\n    /**\n     * 高度\n     */\n    altitude: number\n    /**\n     * 是否是行政区域绘制\n     */\n    isBoundary?: boolean\n    /**\n     * @default #fff\n     * 顶面填充颜色\n     */\n    topFillColor?: string\n    /**\n     * @default 0.5\n     * 顶面填充颜色透明度，取值范围0-1\n     */\n    topFillOpacity?: number\n    /**\n     * \t侧面填充颜色\n     */\n    sideFillColor?: string\n    /**\n     * @default 0.8\n     * 侧面填充颜色透明度，取值范围0-1\n     */\n    sideFillOpacity?: number\n    /**\n     * 自动根据多边形居中\n     */\n    autoCenter?: boolean\n    /**\n     * @default true\n     * 是否在调用map.clearOverlays清除此覆盖物，默认为true\n     */\n    enableMassClear?: boolean\n    onClick?: Callback\n    onDblclick?: Callback\n    onMousedown?: Callback\n    onMouseup?: Callback\n    onMouseout?: Callback\n    onMouseover?: Callback\n    onRemove?: Callback\n    onLineupdate?: Callback\n  }\n  const props = withDefaults(defineProps<PrismProps>(), {\n    topFillColor: '#fff',\n    topFillOpacity: 0.5,\n    sideFillColor: '#fff',\n    sideFillOpacity: 0.8,\n    enableMassClear: true,\n    autoCenter: true\n  })\n  const vueEmits = defineEmits([\n    'initd',\n    'unload',\n    'click',\n    'dblclick',\n    'mousedown',\n    'mouseup',\n    'mouseout',\n    'mouseover',\n    'remove',\n    'lineupdate'\n  ])\n  const { ready } = useLifeCycle()\n  const injectBaseMapSetCenterAndZoom = inject('baseMapSetCenterAndZoom') as (center: {\n    lng: number\n    lat: number\n  }) => void\n\n  let prism: BMapGL.Prism\n  useBaseMapEffect((map: BMapGL.Map) => {\n    const cal = () => {\n      prism && map.removeOverlay(prism)\n    }\n    const init = () => {\n      if (!props.path || !props.path.length) return\n      const {\n        path,\n        altitude,\n        isBoundary,\n        topFillColor,\n        topFillOpacity,\n        sideFillColor,\n        sideFillOpacity,\n        enableMassClear\n      } = props\n      const pathPoints = isBoundary ? (path as string[]) : pathPointsToMapPoints(path as Point[])\n      if (!pathPoints) return\n      prism = new BMapGL.Prism(pathPoints, altitude, {\n        topFillColor,\n        topFillOpacity,\n        sideFillColor,\n        sideFillOpacity,\n        enableMassClear\n      })\n      map.addOverlay(prism)\n      bindEvents(props, vueEmits, prism)\n      ready(map, prism)\n      syncMapCenter()\n      watch(() => props.enableMassClear, setMassClear)\n      watch(() => props.topFillColor, setTopFillColor)\n      watch(() => props.topFillOpacity, setTopFillOpacity)\n      watch(() => props.sideFillColor, setSideFillColor)\n      watch(() => props.sideFillOpacity, setSideFillOpacity)\n      watch(() => props.altitude, setAltitude)\n    }\n    init()\n    // 监听值变化, 初始为空时不会初始化, 不为空值时初始化\n    watch(\n      () => props.path,\n      callWhenDifferentValue(() => {\n        prism\n          ? () => {\n              cal()\n              init()\n            }\n          : init()\n      }),\n      {\n        deep: true\n      }\n    )\n    return cal\n  })\n\n  provide('getOverlayInstance', () => prism)\n\n  function syncMapCenter() {\n    if (props.autoCenter) {\n      nextTick(() => {\n        // 自动设置中心点\n        // 获取中心点\n        try {\n          const center = prism.getBounds()?.getCenter()\n          injectBaseMapSetCenterAndZoom(center)\n        } catch (e) {\n          console.warn('set center error', e)\n        }\n      })\n    }\n  }\n\n  function pathPointsToMapPoints(pathPoints: Point[]) {\n    return pathPoints.map(({ lng, lat }) => new BMapGL.Point(lng, lat))\n  }\n\n  function setMassClear(enableMassClear?: boolean): void {\n    enableMassClear ? prism!.enableMassClear() : prism!.disableMassClear()\n  }\n\n  function setTopFillColor(color: string) {\n    prism.setTopFillColor(color)\n  }\n  function setTopFillOpacity(opacity: number) {\n    prism.setTopFillOpacity(opacity)\n  }\n  function setSideFillColor(color: string) {\n    prism.setSideFillColor(color)\n  }\n  function setSideFillOpacity(opacity: number) {\n    prism.setSideFillOpacity(opacity)\n  }\n  function setAltitude(altitude: number) {\n    prism.setAltitude(altitude)\n  }\n</script>\n<script lang=\"ts\">\n  export default {\n    name: 'BPrism'\n  }\n</script>\n"],"names":[],"mappings":"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"}