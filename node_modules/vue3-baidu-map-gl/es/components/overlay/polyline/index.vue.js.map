{"version":3,"file":"index.vue.js","sources":["../../../../packages/components/overlay/polyline/index.vue"],"sourcesContent":["<template></template>\n<script setup lang=\"ts\">\n  import { defineProps, watch, withDefaults, defineEmits, provide } from 'vue'\n  import useBaseMapEffect from '../../../hooks/useBaseMapEffect'\n  import useLifeCycle from '../../../hooks/useLifeCycle'\n  import { bindEvents, Callback, callWhenDifferentValue, StrokeStyle, type Point } from '../../../utils'\n  export interface PolylineProps {\n    /**\n     * 折线的节点坐标数组\n     */\n    path: Point[]\n    /**\n     * @default #000000\n     * 折线颜色\n     */\n    strokeColor?: string\n    /**\n     * 折线的宽度，以像素为单位\n     */\n    strokeWeight?: number\n    /**\n     * 折线的透明度，取值范围0 - 1\n     */\n    strokeOpacity?: number\n    /**\n     * 折线的样式\n     */\n    strokeStyle?: StrokeStyle\n    /**\n     * @default true\n     * 是否在调用map.clearOverlays清除此覆盖物，默认为true\n     */\n    enableMassClear?: boolean\n    /**\n     * @default false\n     * 是否启用线编辑，默认为false\n     */\n    enableEditing?: boolean\n    /**\n     * @default true\n     * 是否响应点击事件，默认为true\n     */\n    enableClicking?: boolean\n    /**\n     * @default false\n     * 是否开启大地线模式，true时，两点连线将以大地线的形式。默认为false\n     */\n    geodesic?: boolean\n    /**\n     * @default true\n     * 是否进行跨经度180度裁剪，绘制跨精度180时为了优化效果，可以设置成false，默认为true\n     */\n    clip?: boolean\n    onClick?: Callback\n    onDblclick?: Callback\n    onMousedown?: Callback\n    onMouseup?: Callback\n    onMouseout?: Callback\n    onMouseover?: Callback\n    onRemove?: Callback\n    onLineupdate?: Callback\n  }\n  const props = withDefaults(defineProps<PolylineProps>(), {\n    strokeColor: '#000',\n    strokeWeight: 2,\n    strokeOpacity: 1,\n    strokeStyle: 'solid',\n    enableMassClear: true,\n    enableEditing: false,\n    enableClicking: true,\n    geodesic: false,\n    clip: true\n  })\n  const vueEmits = defineEmits([\n    'initd',\n    'unload',\n    'click',\n    'dblclick',\n    'mousedown',\n    'mouseup',\n    'mouseout',\n    'mouseover',\n    'remove',\n    'lineupdate'\n  ])\n  const { ready } = useLifeCycle()\n  let polyline: BMapGL.Polyline\n  useBaseMapEffect((map: BMapGL.Map) => {\n    const cal = () => {\n      map.removeOverlay(polyline)\n    }\n    const init = () => {\n      if (!props.path || !props.path.length) return\n      const {\n        path,\n        strokeColor,\n        strokeWeight,\n        strokeOpacity,\n        strokeStyle,\n        enableMassClear,\n        enableEditing,\n        enableClicking,\n        geodesic,\n        clip\n      } = props\n      const pathPoints = pathPointsToMapPoints(path)\n      polyline = new BMapGL.Polyline(pathPoints, {\n        strokeColor,\n        strokeWeight,\n        strokeOpacity,\n        strokeStyle,\n        enableMassClear,\n        enableEditing,\n        enableClicking,\n        geodesic,\n        clip\n      })\n      map.addOverlay(polyline)\n      bindEvents(props, vueEmits, polyline)\n      ready(map, polyline)\n    }\n\n    init()\n    // 监听值变化\n    watch(\n      () => props.path,\n      callWhenDifferentValue((n) => {\n        polyline ? setPath(n) : init()\n      }),\n      {\n        deep: true\n      }\n    )\n    watch(() => props.strokeColor, setStrokeColor)\n    watch(() => props.strokeOpacity, setStrokeOpacity)\n    watch(() => props.strokeWeight, setStrokeWeight)\n    watch(() => props.strokeStyle, setStrokeStyle)\n    watch(() => props.enableMassClear, setMassClear)\n    watch(() => props.enableEditing, setEditing)\n\n    return cal\n  })\n\n  provide('getOverlayInstance', () => polyline)\n\n  function pathPointsToMapPoints(pathPoints: Point[]) {\n    return pathPoints.map(({ lng, lat }) => new BMapGL.Point(lng, lat))\n  }\n\n  function setPath(path: Point[]) {\n    polyline.setPath(pathPointsToMapPoints(path))\n  }\n\n  function setStrokeColor(color: string): void {\n    polyline.setStrokeColor(color)\n  }\n  function setStrokeOpacity(opacity: number): void {\n    polyline.setStrokeOpacity(opacity)\n  }\n  function setStrokeWeight(weight: number): void {\n    polyline.setStrokeWeight(weight)\n  }\n  function setStrokeStyle(style: StrokeStyle): void {\n    polyline.setStrokeStyle(style)\n  }\n  function setMassClear(enableMassClear: boolean): void {\n    enableMassClear ? polyline!.enableMassClear() : polyline!.disableMassClear()\n  }\n  function setEditing(enableEditing: boolean): void {\n    enableEditing ? polyline!.enableEditing() : polyline!.disableEditing()\n  }\n</script>\n<script lang=\"ts\">\n  export default {\n    name: 'BPolyline'\n  }\n</script>\n"],"names":[],"mappings":"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"}