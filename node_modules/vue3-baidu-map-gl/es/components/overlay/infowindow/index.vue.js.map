{"version":3,"file":"index.vue.js","sources":["../../../../packages/components/overlay/infowindow/index.vue"],"sourcesContent":["<template>\n  <div style=\"display: none\">\n    <div ref=\"infoWindowContainer\" v-bind=\"$attrs\">\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref, watch, withDefaults, onUpdated, nextTick, computed, provide } from 'vue'\n  import useBaseMapEffect from '../../../hooks/useBaseMapEffect'\n  import useLifeCycle from '../../../hooks/useLifeCycle'\n  import { bindEvents, Callback, callWhenDifferentValue, type Point } from '../../../utils/index'\n  export interface InfoWindowProps {\n    modelValue?: boolean\n    title?: string\n    position: Point\n    width?: 0 | RangeOf2<220, 730>\n    height?: 0 | RangeOf2<60, 650>\n    /**\n     * 信息窗最大化时的宽度，单位像素。取值范围：220 - 730\n     */\n    maxWidth?: RangeOf2<220, 730>\n    /**\n     * 控件的偏移值\n     */\n    offset?: {\n      x: number\n      y: number\n    }\n    // enableMaximize?: boolean\n    enableAutoPan?: boolean\n    enableCloseOnClick?: boolean\n    onClose?: Callback\n    onOpen?: Callback\n    onMaximize?: Callback\n    onRestore?: Callback\n    onClickclose?: Callback\n  }\n  const props = withDefaults(defineProps<InfoWindowProps>(), {\n    modelValue: false,\n    title: '',\n    width: 0,\n    height: 0,\n    maxWidth: 220,\n    offset: () => ({\n      x: 0,\n      y: 0\n    }),\n    // enableMaximize: false,\n    enableAutoPan: true,\n    enableCloseOnClick: true\n  })\n  const vueEmits = defineEmits([\n    'initd',\n    'unload',\n    'close',\n    'open',\n    'maximize',\n    'restore',\n    'clickclose',\n    'update:modelValue'\n  ])\n\n  const visible = computed({\n    get() {\n      return props.modelValue\n    },\n    set(value) {\n      vueEmits('update:modelValue', value)\n    }\n  })\n  const infoWindowContainer = ref<HTMLElement>()\n  const { ready } = useLifeCycle()\n  let infoWindow: BMapGL.InfoWindow\n  let _map: BMapGL.Map\n  useBaseMapEffect((map: BMapGL.Map) => {\n    _map = map\n    const cal = () => {\n      infoWindow && map.removeOverlay(infoWindow)\n    }\n    const init = () => {\n      const { title, width, height, enableAutoPan, maxWidth, offset, enableCloseOnClick } = props\n      const options: BMapGL.InfoWindowOptions = {\n        width,\n        height,\n        title,\n        maxWidth,\n        enableAutoPan,\n        enableCloseOnClick,\n        offset: new BMapGL.Size(offset.x, offset.y)\n      }\n      infoWindow = new BMapGL.InfoWindow(infoWindowContainer.value || '', options)\n      infoWindow.addEventListener('close', () => {\n        if (props.modelValue) visible.value = false\n      })\n      infoWindow.addEventListener('open', () => {\n        if (!props.modelValue) visible.value = true\n      })\n      map.addOverlay(infoWindow)\n      redraw()\n      bindObserver()\n      bindEvents(props, vueEmits, infoWindow)\n      ready(map, infoWindow)\n\n      if (props.modelValue) {\n        // 多个 infoWindow, 显示最后一个实例, 其他实例同步显隐状态\n        nextTick(() => {\n          open()\n          nextTick(() => {\n            !infoWindow._visible && (visible.value = false)\n          })\n        })\n      }\n    }\n    if (!infoWindowContainer.value) {\n      nextTick(() => init())\n    } else {\n      init()\n    }\n\n    // 监听值变化\n    watch(\n      () => props.position,\n      callWhenDifferentValue((res) => {\n        console.log(res)\n        setPosition(res)\n      }),\n      { deep: true }\n    )\n    watch(() => props.offset, callWhenDifferentValue(setOffset), { deep: true })\n    watch(() => props.title, setTitle)\n    watch(() => props.width, setWidth)\n    watch(() => props.height, setHeight)\n    watch(() => props.maxWidth, setMaxWidth)\n    watch(() => props.enableAutoPan, setAutoPan)\n    watch(() => props.enableCloseOnClick, setCloseOnClick)\n    watch(\n      () => props.modelValue,\n      callWhenDifferentValue(() => {\n        props.modelValue ? open() : close()\n      })\n    )\n\n    return cal\n  })\n  onUpdated(() => {\n    if (infoWindow && infoWindow.isOpen()) {\n      setContent(infoWindowContainer.value || '')\n      redraw()\n    }\n  })\n  provide('getOverlayInstance', () => infoWindow)\n  function bindObserver() {\n    const MutationObserver = window.MutationObserver\n    if (!MutationObserver) {\n      return\n    }\n    new MutationObserver(() => {\n      infoWindow.redraw()\n    }).observe(infoWindowContainer.value!, { attributes: true, childList: true, characterData: true, subtree: true })\n  }\n  function open() {\n    const { position } = props\n    if (!position || !infoWindow) return\n    _map.openInfoWindow(infoWindow, new BMapGL.Point(position.lng, position.lat))\n    visible.value = true\n  }\n  function close() {\n    if (!infoWindow) return\n    infoWindow.hide()\n    visible.value = false\n  }\n\n  function redraw() {\n    infoWindow.redraw()\n    Array.prototype.forEach.call(infoWindowContainer.value?.querySelectorAll('img') || [], (imgEl) => {\n      imgEl.onload = () => {\n        infoWindow.redraw()\n      }\n    })\n  }\n\n  function setTitle(title: string) {\n    infoWindow.setTitle(title)\n  }\n  function setHeight(height: number) {\n    infoWindow.setHeight(height)\n  }\n  function setWidth(width: number) {\n    infoWindow.setWidth(width)\n  }\n  function setMaxWidth(maxWidth: number) {\n    infoWindow.setMaxWidth(maxWidth)\n  }\n  // function setMaximize(maximize: boolean) {\n  // \tmaximize ? infoWindow.enableMaximize() : infoWindow.disableMaximize()\n  // }\n  function setAutoPan(autoPan: boolean) {\n    autoPan ? infoWindow.enableAutoPan() : infoWindow.disableAutoPan()\n  }\n  function setCloseOnClick(closeOnClick: boolean) {\n    closeOnClick ? infoWindow.enableCloseOnClick() : infoWindow.disableCloseOnClick()\n  }\n  function setPosition(position: Point) {\n    close()\n    infoWindow.setPosition(new BMapGL.Point(position.lng, position.lat))\n    open()\n  }\n  function setContent(content: string | HTMLElement): void {\n    infoWindow.setContent(content)\n  }\n  function setOffset(offset: { x: number; y: number }): void {\n    infoWindow.setOffset(new BMapGL.Size(offset.x, offset.y))\n  }\n</script>\n\n<script lang=\"ts\">\n  export default {\n    name: 'BInfoWindow'\n  }\n</script>\n"],"names":[],"mappings":"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"}