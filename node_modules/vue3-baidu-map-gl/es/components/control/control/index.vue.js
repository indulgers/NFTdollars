import { defineComponent, ref, onMounted, openBlock, createElementBlock, createElementVNode, mergeProps, renderSlot } from 'vue';
import useLifeCycle from '../../../hooks/useLifeCycle';
import useBaseMapEffect from '../../../hooks/useBaseMapEffect';

const _hoisted_1 = { style: { "display": "none" } };
const __default__ = {
    name: 'BControl',
    inheritAttrs: false
};
var script = /*#__PURE__*/ defineComponent(Object.assign(Object.assign({}, __default__), { props: {
        anchor: { type: null, required: false, default: 'BMAP_ANCHOR_TOP_LEFT' },
        offset: { type: Object, required: false, default: () => ({ x: 83, y: 18 }) }
    }, emits: ['initd', 'unload'], setup(__props) {
        const props = __props;
        const controlContainer = ref();
        const { ready } = useLifeCycle();
        onMounted(() => {
            useBaseMapEffect((map) => {
                if (!controlContainer.value)
                    return;
                const customControl = new BMapGL.Control();
                customControl.defaultAnchor = window[props.anchor];
                customControl.defaultOffset = new BMapGL.Size(props.offset.x, props.offset.y);
                customControl.initialize = (_map) => {
                    return _map.getContainer().appendChild(controlContainer.value);
                };
                map.addControl(customControl);
                ready(map, customControl);
                return () => map.removeControl(customControl);
            });
        });
        return (_ctx, _cache) => {
            return (openBlock(), createElementBlock("div", _hoisted_1, [
                createElementVNode("div", mergeProps({
                    ref_key: "controlContainer",
                    ref: controlContainer
                }, _ctx.$attrs), [
                    renderSlot(_ctx.$slots, "default")
                ], 16 /* FULL_PROPS */)
            ]));
        };
    } }));

script.__file = "packages/components/control/control/index.vue";

export { script as default };
//# sourceMappingURL=index.vue.js.map
