import { defineComponent, watch } from 'vue';
import useBaseMapEffect from '../../../hooks/useBaseMapEffect';
import useLifeCycle from '../../../hooks/useLifeCycle';

const __default__ = {
    name: 'BScale'
};
var script = /*#__PURE__*/ defineComponent(Object.assign(Object.assign({}, __default__), { props: {
        anchor: { type: null, required: false, default: 'BMAP_ANCHOR_BOTTOM_LEFT' },
        offset: { type: Object, required: false, default: () => ({ x: 83, y: 18 }) },
        unit: { type: null, required: false, default: 'BMAP_UNIT_METRIC' }
    }, emits: ['initd', 'unload'], setup(__props) {
        const props = __props;
        const { ready } = useLifeCycle();
        let scaleCtrl;
        useBaseMapEffect((map) => {
            scaleCtrl = new BMapGL.ScaleControl({
                offset: new BMapGL.Size(props.offset.x, props.offset.y),
                anchor: window[props.anchor]
            });
            setUnit();
            map.addControl(scaleCtrl);
            ready(map, scaleCtrl);
            return () => map.removeControl(scaleCtrl);
        });
        // 监听比例尺单位变化
        watch(() => props.unit, setUnit);
        /**
         * 设置比例尺单位制
         */
        function setUnit() {
            scaleCtrl.setUnit(window[props.unit]);
        }
        return (_ctx, _cache) => {
            return null;
        };
    } }));

script.__file = "packages/components/control/scale/index.vue";

export { script as default };
//# sourceMappingURL=index.vue.js.map
